name: Release
on:
  pull_request:
    types:
      - closed
env:
  DASEL_VERSION: v2.5.0
  IMG_TAG: pr-${{ github.event.number }}
jobs:
  release:
    name: Release a new version
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write
    if: |
      github.event.pull_request.merged && contains(github.event.pull_request.labels.*.name, 'release')
    steps:
      - uses: actions/checkout@v4
      - name: Install dasel
        run: |
          sudo curl -L \
            https://github.com/TomWright/dasel/releases/download/${{ env.DASEL_VERSION }}/dasel_linux_amd64 \
            -o /usr/local/bin/dasel
          sudo chmod +x /usr/local/bin/dasel
      - name: Get a release version
        run: |
          echo "RELEASE_VERSION=v$(dasel -f pyproject.toml -r toml .project.version | sed "s/'//g")" >> $GITHUB_ENV
      - uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db # v3.6.1
      - uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Create a new tag
        run: |
          git tag ${{ env.RELEASE_VERSION }}
          git push origin ${{ env.RELEASE_VERSION }}
      - name: Release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run:
          gh release create ${{ env.RELEASE_VERSION }} --generate-notes
      - name: Release a image
        run: |
          docker pull ghcr.io/${{ github.repository }}:${{ env.IMG_TAG }}
          docker tag \
            ghcr.io/${{ github.repository }}:${{ env.IMG_TAG }} \
            ghcr.io/${{ github.repository }}:${{ env.RELEASE_VERSION }}
          docker push ghcr.io/${{ github.repository }}:${{ env.RELEASE_VERSION }}
          docker tag \
            ghcr.io/${{ github.repository }}:${{ env.IMG_TAG }} \
            ghcr.io/${{ github.repository }}:latest
          docker push ghcr.io/${{ github.repository }}:latest
